ext.deps = [:]

def versions = [:]
versions.kotlin = "1.3.60"
versions.ktx = "1.2.0"
versions.appcompat = "1.1.0"
versions.material = "1.2.0-alpha05"
versions.recyclerview = "1.1.0"
versions.fragment = "1.3.0-alpha01"
versions.cardview = "1.0.0"
versions.constraint = "2.0.0-beta4"
versions.lifecycle = "2.2.0"
versions.arch = "2.1.0"
versions.navigation = "2.3.0-alpha03"
versions.preference = "1.1.0"
versions.security = "1.0.0-alpha02"
versions.glide = "4.11.0"
versions.rx2 = "2.2.18"
versions.rxAndroid = "2.1.1"
versions.dagger = "2.27"
versions.assistedInject = "0.5.2"
versions.retrofit2 = "2.7.2"
versions.loggingInterceptor = "4.4.0"
versions.room = "2.2.4"
versions.timber = "4.7.1"
versions.moshi = "1.9.2"
versions.moshiConverter = "2.4.0"
versions.rxConverter = "2.7.2"
versions.jupiter = "5.6.0"
versions.runner = "1.2.0"
versions.mockito = "3.3.3"
versions.mockitokotlin = "2.2.0"
versions.mockwebserver = "4.4.0"
versions.assertj = "3.15.0"
versions.spek = "2.0.10"

def android = [:]
android.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
android.fragment = "androidx.fragment:fragment-ktx:$versions.fragment"
android.recyclerview = "androidx.appcompat:appcompat:$versions.appcompat"
android.cardview = "androidx.appcompat:appcompat:$versions.appcompat"
android.constraint = "androidx.constraintlayout:constraintlayout:$versions.constraint"
android.preference = "androidx.appcompat:appcompat:$versions.appcompat"
android.security = "androidx.security:security-crypto:$versions.security"
android.ktx = "androidx.core:core-ktx:$versions.ktx"
deps.android = android

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
deps.navigation = navigation

def lifecycle = [:]
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
lifecycle.common = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
deps.lifecycle = lifecycle

def material = [:]
material.material = "com.google.android.material:material:$versions.material"
deps.material = material

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
deps.kotlin = kotlin

def network = [:]
network.retrofit2 = "com.squareup.retrofit2:retrofit:$versions.retrofit2"
network.rxconverter = "com.squareup.retrofit2:adapter-rxjava2:$versions.rxConverter"
network.logging = "com.squareup.okhttp3:logging-interceptor:$versions.loggingInterceptor"
network.moshi = "com.squareup.moshi:moshi:$versions.moshi"
network.moshicodegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
network.moshiconverter = "com.squareup.retrofit2:converter-moshi:$versions.moshiConverter"
deps.network = network

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rx2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def rxJava = [:]
rxJava.rx2 = "io.reactivex.rxjava2:rxjava:$versions.rx2"
rxJava.rxAndroid = "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
deps.rxJava = rxJava

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
deps.dagger = dagger

def assisted = [:]
assisted.inject = "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.assistedInject"
assisted.processor = "com.squareup.inject:assisted-inject-processor-dagger2:$versions.assistedInject"
deps.assisted = assisted

def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.glidecompiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def tools = [:]
tools.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.tools = tools

def spek = [:]
spek.dsl = "org.spekframework.spek2:spek-dsl-jvm:$versions.spek"
spek.runner = "org.spekframework.spek2:spek-runner-junit5:$versions.spek"
deps.spek = spek

def jupiter = [:]
jupiter.api = "org.junit.jupiter:junit-jupiter-api:$versions.jupiter"
jupiter.engine = "org.junit.jupiter:junit-jupiter-engine:$versions.jupiter"
jupiter.params = "org.junit.jupiter:junit-jupiter-params:$versions.jupiter"
deps.jupiter = jupiter

def junit5 = [:]
junit5.core = "de.mannodermaus.junit5:android-test-core:$versions.runner"
junit5.runner = "de.mannodermaus.junit5:android-test-runner:$versions.runner"
deps.junit5 = junit5

def mock = [:]
mock.core = "org.mockito:mockito-core:$versions.mockito"
mock.inline = "org.mockito:mockito-inline:$versions.mockito"
mock.kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitokotlin"
mock.webserver = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.mock = mock

def test = [:]
test.runner = "androidx.test:runner:$versions.runner"
test.assertj = "org.assertj:assertj-core:$versions.assertj"
deps.test = test